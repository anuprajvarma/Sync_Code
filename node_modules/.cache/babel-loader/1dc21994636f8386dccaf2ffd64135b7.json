{"ast":null,"code":"var _jsxFileName = \"/Users/anupraj/Documents/Sync_Code/src/components/Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport Codemirror from \"codemirror\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/dracula.css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/addon/edit/closebrackets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = _ref => {\n  _s();\n\n  let {\n    socketRef,\n    roomId,\n    onCodeChange\n  } = _ref;\n  const editorRef = useRef(null);\n  useEffect(() => {\n    async function init() {\n      editorRef.current = Codemirror.fromTextArea(document.getElementById(\"realtimeEditor\"), {\n        mode: {\n          name: \"javascript\",\n          json: true\n        },\n        theme: \"dracula\",\n        autoCloseBrackets: true,\n        autoCloseTags: true,\n        lineNumbers: true\n      });\n      editorRef.current.on(\"change\", (instance, changes) => {\n        //console.log('changes',changes)\n        const {\n          origin\n        } = changes;\n        const code = instance.getValue();\n        onCodeChange(code);\n\n        if (origin !== \"setValue\") {\n          socketRef.current.emit(\"codeChange\", {\n            roomId,\n            code\n          });\n        }\n      });\n    }\n\n    init();\n  }, []);\n  useEffect(() => {\n    if (socketRef.current) {\n      socketRef.current.on(\"codeChange\", _ref2 => {\n        let {\n          code\n        } = _ref2;\n\n        // console.log('receving',code)\n        if (code !== null) {\n          editorRef.current.setValue(code);\n        }\n      });\n    }\n  }, [socketRef.current]);\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: \"realtimeEditor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Editor, \"ueqoO+5gVAT6IRBF08iN84bYr2g=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","Codemirror","Editor","socketRef","roomId","onCodeChange","editorRef","init","current","fromTextArea","document","getElementById","mode","name","json","theme","autoCloseBrackets","autoCloseTags","lineNumbers","on","instance","changes","origin","code","getValue","emit","setValue"],"sources":["/Users/anupraj/Documents/Sync_Code/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Codemirror from \"codemirror\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/dracula.css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/addon/edit/closebrackets\";\n\nconst Editor = ({ socketRef, roomId, onCodeChange }) => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    async function init() {\n      editorRef.current = Codemirror.fromTextArea(\n        document.getElementById(\"realtimeEditor\"),\n        {\n          mode: { name: \"javascript\", json: true },\n          theme: \"dracula\",\n          autoCloseBrackets: true,\n          autoCloseTags: true,\n          lineNumbers: true,\n        }\n      );\n\n      editorRef.current.on(\"change\", (instance, changes) => {\n        //console.log('changes',changes)\n        const { origin } = changes;\n        const code = instance.getValue();\n        onCodeChange(code);\n        if (origin !== \"setValue\") {\n          socketRef.current.emit(\"codeChange\", {\n            roomId,\n            code,\n          });\n        }\n      });\n    }\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (socketRef.current) {\n      socketRef.current.on(\"codeChange\", ({ code }) => {\n        // console.log('receving',code)\n        if (code !== null) {\n          editorRef.current.setValue(code);\n        }\n      });\n    }\n  }, [socketRef.current]);\n\n  return <textarea id=\"realtimeEditor\"></textarea>;\n};\n\nexport default Editor;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,+BAAP;AACA,OAAO,8BAAP;AACA,OAAO,uCAAP;AACA,OAAO,gCAAP;AACA,OAAO,qCAAP;;;AAEA,MAAMC,MAAM,GAAG,QAAyC;EAAA;;EAAA,IAAxC;IAAEC,SAAF;IAAaC,MAAb;IAAqBC;EAArB,CAAwC;EACtD,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;EAEAD,SAAS,CAAC,MAAM;IACd,eAAeQ,IAAf,GAAsB;MACpBD,SAAS,CAACE,OAAV,GAAoBP,UAAU,CAACQ,YAAX,CAClBC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CADkB,EAElB;QACEC,IAAI,EAAE;UAAEC,IAAI,EAAE,YAAR;UAAsBC,IAAI,EAAE;QAA5B,CADR;QAEEC,KAAK,EAAE,SAFT;QAGEC,iBAAiB,EAAE,IAHrB;QAIEC,aAAa,EAAE,IAJjB;QAKEC,WAAW,EAAE;MALf,CAFkB,CAApB;MAWAZ,SAAS,CAACE,OAAV,CAAkBW,EAAlB,CAAqB,QAArB,EAA+B,CAACC,QAAD,EAAWC,OAAX,KAAuB;QACpD;QACA,MAAM;UAAEC;QAAF,IAAaD,OAAnB;QACA,MAAME,IAAI,GAAGH,QAAQ,CAACI,QAAT,EAAb;QACAnB,YAAY,CAACkB,IAAD,CAAZ;;QACA,IAAID,MAAM,KAAK,UAAf,EAA2B;UACzBnB,SAAS,CAACK,OAAV,CAAkBiB,IAAlB,CAAuB,YAAvB,EAAqC;YACnCrB,MADmC;YAEnCmB;UAFmC,CAArC;QAID;MACF,CAXD;IAYD;;IACDhB,IAAI;EACL,CA3BQ,EA2BN,EA3BM,CAAT;EA6BAR,SAAS,CAAC,MAAM;IACd,IAAII,SAAS,CAACK,OAAd,EAAuB;MACrBL,SAAS,CAACK,OAAV,CAAkBW,EAAlB,CAAqB,YAArB,EAAmC,SAAc;QAAA,IAAb;UAAEI;QAAF,CAAa;;QAC/C;QACA,IAAIA,IAAI,KAAK,IAAb,EAAmB;UACjBjB,SAAS,CAACE,OAAV,CAAkBkB,QAAlB,CAA2BH,IAA3B;QACD;MACF,CALD;IAMD;EACF,CATQ,EASN,CAACpB,SAAS,CAACK,OAAX,CATM,CAAT;EAWA,oBAAO;IAAU,EAAE,EAAC;EAAb;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CA5CD;;GAAMN,M;;KAAAA,M;AA8CN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}