{"ast":null,"code":"var _jsxFileName = \"/Users/anupraj/Documents/Sync_Code/src/EditorPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport { initSocket } from \"./socket\";\nimport { DoubtSection } from \"./components/DoubtSection\";\nimport Client from \"./components/Client_avatar\";\nimport logo from \"./images/logo.webp\";\nimport Editor from \"./components/Editor\";\nimport \"./EditorPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditorPage() {\n  _s();\n\n  const socketRef = useRef(null);\n  const navigate = useNavigate();\n  const codeRef = useRef(null);\n  const location = useLocation();\n  const [doubt, setDoubt] = useState(\"\");\n  const [allDoubts, setAllDoubts] = useState({});\n  const [isChatShown, setChatShown] = useState(false);\n  const [liveCode, onCodeChange] = useState(\"\");\n  const data = useParams();\n  const roomId = data.id;\n  const username = location.state.username;\n  const [clients, setclients] = useState([]);\n\n  const handleChat = e => {\n    e.preventDefault();\n    setChatShown(true);\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      socketRef.current = await initSocket();\n      socketRef.current.emit(\"join_room\", {\n        roomId,\n        username\n      }); // Listening for doubt event\n\n      socketRef.current.on(\"doubt\", _ref => {\n        let {\n          doubts,\n          username,\n          socketId\n        } = _ref;\n        setAllDoubts(doubts);\n        toast.success(`${username} asked a doubt!`);\n      });\n      socketRef.current.on(\"joined_user\", _ref2 => {\n        let {\n          clients,\n          username,\n          socketId\n        } = _ref2;\n\n        if (username !== location.state.username) {\n          toast.success(`${username} joined the room.`);\n        }\n\n        setclients(clients);\n        socketRef.current.emit(\"sync_code\", {\n          code: codeRef.current,\n          socketId\n        });\n      });\n      socketRef.current.on(\"disconnected\", _ref3 => {\n        let {\n          socketId,\n          username\n        } = _ref3;\n        toast.success(`${username} left the room`);\n        setclients(prev => {\n          return prev.filter(clients => clients.socketId !== socketId);\n        });\n      });\n    };\n\n    init();\n    return () => {\n      socketRef.current.disconnect();\n      socketRef.current.off(\"disconnected\");\n      socketRef.current.off(\"joined_user\");\n    };\n  }, []);\n\n  async function copyRoomId() {\n    console.log(clients);\n\n    try {\n      await window.navigator.clipboard.writeText(roomId);\n      toast.success(\"Room id has been copied to clipboard!\");\n    } catch (err) {\n      toast.error(err);\n    }\n  }\n\n  function leaveRoom() {\n    navigate(\"/\");\n    toast.success(\"You leaved the Room\");\n  }\n\n  async function askDoubt(e) {\n    e.preventDefault();\n    socketRef.current.emit(\"doubt\", {\n      roomId,\n      username: location.state.username,\n      doubt\n    });\n    setDoubt(\"\");\n  }\n\n  const downloadTxtFile = async () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([liveCode], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"main.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logoImage\",\n            src: logo,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientList\",\n          children: clients.map(item => /*#__PURE__*/_jsxDEV(Client, {\n            username: item.username\n          }, item.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn copyBtn\",\n          onClick: copyRoomId,\n          children: \"Copy Room Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn leaveBtn\",\n          onClick: leaveRoom,\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        socketRef: socketRef,\n        roomId: roomId,\n        onCodeChange: code => {\n          codeRef.current = code;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn doubtBtn\",\n      style: {\n        right: \"140px\"\n      },\n      onClick: downloadTxtFile,\n      children: \"Download Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn doubtBtn\",\n      onClick: handleChat,\n      children: \"Ask a doubt?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), isChatShown && /*#__PURE__*/_jsxDEV(DoubtSection, {\n      status: setChatShown,\n      setDoubt: setDoubt,\n      doubt: doubt,\n      askDoubt: askDoubt,\n      allDoubts: allDoubts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditorPage, \"OQE/BxpdNJ7ENVbnI5/Xf6dyT0c=\", false, function () {\n  return [useNavigate, useLocation, useParams];\n});\n\n_c = EditorPage;\nexport default EditorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useNavigate","useParams","toast","initSocket","DoubtSection","Client","logo","Editor","EditorPage","socketRef","navigate","codeRef","location","doubt","setDoubt","allDoubts","setAllDoubts","isChatShown","setChatShown","liveCode","onCodeChange","data","roomId","id","username","state","clients","setclients","handleChat","e","preventDefault","init","current","emit","on","doubts","socketId","success","code","prev","filter","disconnect","off","copyRoomId","console","log","window","navigator","clipboard","writeText","err","error","leaveRoom","askDoubt","downloadTxtFile","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","map","item","right"],"sources":["/Users/anupraj/Documents/Sync_Code/src/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport { initSocket } from \"./socket\";\nimport { DoubtSection } from \"./components/DoubtSection\";\nimport Client from \"./components/Client_avatar\";\nimport logo from \"./images/logo.webp\";\nimport Editor from \"./components/Editor\";\nimport \"./EditorPage.css\";\n\nfunction EditorPage() {\n  const socketRef = useRef(null);\n  const navigate = useNavigate();\n  const codeRef = useRef(null);\n  const location = useLocation();\n  const [doubt, setDoubt] = useState(\"\");\n  const [allDoubts, setAllDoubts] = useState({});\n  const [isChatShown, setChatShown] = useState(false);\n  const [liveCode, onCodeChange] = useState(\"\");\n  const data = useParams();\n  const roomId = data.id;\n  const username = location.state.username;\n  const [clients, setclients] = useState([]);\n\n  const handleChat = (e) => {\n    e.preventDefault();\n    setChatShown(true);\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      socketRef.current = await initSocket();\n\n      socketRef.current.emit(\"join_room\", { roomId, username });\n\n      // Listening for doubt event\n      socketRef.current.on(\"doubt\", ({ doubts, username, socketId }) => {\n        setAllDoubts(doubts);\n        toast.success(`${username} asked a doubt!`);\n      });\n\n      socketRef.current.on(\"joined_user\", ({ clients, username, socketId }) => {\n        if (username !== location.state.username) {\n          toast.success(`${username} joined the room.`);\n        }\n        setclients(clients);\n\n        socketRef.current.emit(\"sync_code\", {\n          code: codeRef.current,\n          socketId,\n        });\n      });\n\n      socketRef.current.on(\"disconnected\", ({ socketId, username }) => {\n        toast.success(`${username} left the room`);\n        setclients((prev) => {\n          return prev.filter((clients) => clients.socketId !== socketId);\n        });\n      });\n    };\n    init();\n    return () => {\n      socketRef.current.disconnect();\n      socketRef.current.off(\"disconnected\");\n      socketRef.current.off(\"joined_user\");\n    };\n  }, []);\n\n  async function copyRoomId() {\n    console.log(clients);\n    try {\n      await window.navigator.clipboard.writeText(roomId);\n      toast.success(\"Room id has been copied to clipboard!\");\n    } catch (err) {\n      toast.error(err);\n    }\n  }\n  function leaveRoom() {\n    navigate(\"/\");\n    toast.success(\"You leaved the Room\");\n  }\n\n  async function askDoubt(e) {\n    e.preventDefault();\n    socketRef.current.emit(\"doubt\", {\n      roomId,\n      username: location.state.username,\n      doubt,\n    });\n    setDoubt(\"\");\n  }\n\n  const downloadTxtFile = async () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([liveCode], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n\n    element.download = \"main.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  return (\n    <div className=\"mainWrap\">\n      <div className=\"aside\">\n        <div className=\"asideInner\">\n          <div className=\"logo\">\n            <img className=\"logoImage\" src={logo} alt=\"\" />\n          </div>\n          <h3>Connected</h3>\n          <div className=\"clientList\">\n            {clients.map((item) => (\n              <Client key={item.socketId} username={item.username} />\n            ))}\n          </div>\n        </div>\n        <div className=\"buttons\">\n          <button className=\"btn copyBtn\" onClick={copyRoomId}>\n            Copy Room Id\n          </button>\n          <button className=\"btn leaveBtn\" onClick={leaveRoom}>\n            Leave\n          </button>\n        </div>\n      </div>\n\n      <div className=\"editorWrap\">\n        <Editor\n          socketRef={socketRef}\n          roomId={roomId}\n          onCodeChange={(code) => {\n            codeRef.current = code;\n          }}\n        />\n      </div>\n      <button\n        className=\"btn doubtBtn\"\n        style={{ right: \"140px\" }}\n        onClick={downloadTxtFile}\n      >\n        Download Code\n      </button>\n      <button className=\"btn doubtBtn\" onClick={handleChat}>\n        Ask a doubt?\n      </button>\n      {isChatShown && (\n        <DoubtSection\n          status={setChatShown}\n          setDoubt={setDoubt}\n          doubt={doubt}\n          askDoubt={askDoubt}\n          allDoubts={allDoubts}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default EditorPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}