{"ast":null,"code":"var _jsxFileName = \"/Users/anupraj/Documents/Sync_Code/src/EditorPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport { initSocket } from \"./socket\";\nimport Client from \"./components/Client_avatar\";\nimport logo from \"./images/logo.webp\";\nimport Editor from \"./components/Editor\";\nimport \"./EditorPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditorPage() {\n  _s();\n\n  const editorRef = useRef(null);\n  const socketRef = useRef(null);\n  const navigate = useNavigate();\n  const codeRef = useRef(null);\n  const location = useLocation();\n  const [liveCode, setLiveCode] = useState(\"\");\n  const [access, setAccess] = useState(false);\n  const data = useParams();\n  const roomId = data.id;\n  const username = location.state.username;\n  const [clients, setclients] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const init = async () => {\n      socketRef.current = await initSocket();\n      socketRef.current.emit(\"join_room\", {\n        roomId,\n        username\n      });\n      socketRef.current.on(\"joined_user\", _ref => {\n        let {\n          clients,\n          username,\n          socketId\n        } = _ref;\n\n        if (username !== location.state.username) {\n          toast.success(`${username} joined the room.`);\n        }\n\n        setclients(clients);\n        socketRef.current.emit(\"sync_code\", {\n          code: codeRef.current,\n          socketId\n        });\n      });\n      socketRef.current.on(\"disconnected\", _ref2 => {\n        let {\n          socketId,\n          username\n        } = _ref2;\n        toast.success(`${username} left the room`);\n        setclients(prev => {\n          return prev.filter(clients => clients.socketId !== socketId);\n        });\n      });\n    };\n\n    init();\n    return () => {\n      socketRef.current.disconnect();\n      socketRef.current.off(\"disconnected\");\n      socketRef.current.off(\"joined_user\");\n    };\n  }, []);\n\n  async function copyRoomId() {\n    console.log(clients);\n\n    try {\n      await window.navigator.clipboard.writeText(roomId);\n      toast.success(\"Room id has been copied to clipboard!\");\n    } catch (err) {\n      toast.error(err);\n    }\n  }\n\n  async function lockAccess() {\n    setAccess(!access);\n    socketRef.current.emit(\"lock_access\", {\n      id,\n      access\n    });\n  }\n\n  function leaveRoom() {\n    navigate(\"/\");\n    toast.success(\"You leaved the Room\");\n  }\n\n  const downloadTxtFile = async () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([liveCode], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file); // const options = {\n    //   method: 'GET',\n    //   url: `https://judge0-ce.p.rapidapi.com/languages/${langCode}`,\n    //   headers: {\n    //     'X-RapidAPI-Key': `${process.env.REACT_APP_RAPID_API_KEY}`,\n    //     'X-RapidAPI-Host': 'judge0-ce.p.rapidapi.com'\n    //   }\n    // };\n    // const res = (await axios.request(options)).data;\n\n    element.download = \"main.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logoImage\",\n            src: logo,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientList\",\n          children: clients.map(item => /*#__PURE__*/_jsxDEV(Client, {\n            username: item.username\n          }, item.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn copyBtn\",\n          onClick: copyRoomId,\n          children: \"Copy Room Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn leaveBtn\",\n          onClick: leaveRoom,\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        socketRef: socketRef,\n        id: id,\n        setLiveCode: setLiveCode,\n        access: access,\n        editorRef: editorRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn doubtBtn\",\n      style: {\n        right: \"140px\"\n      },\n      onClick: downloadTxtFile,\n      children: \"Download Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditorPage, \"EwldaHXCtG5TRxLnNpIHhUpMyaE=\", false, function () {\n  return [useNavigate, useLocation, useParams, useParams];\n});\n\n_c = EditorPage;\nexport default EditorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useNavigate","useParams","toast","initSocket","Client","logo","Editor","EditorPage","editorRef","socketRef","navigate","codeRef","location","liveCode","setLiveCode","access","setAccess","data","roomId","id","username","state","clients","setclients","init","current","emit","on","socketId","success","code","prev","filter","disconnect","off","copyRoomId","console","log","window","navigator","clipboard","writeText","err","error","lockAccess","leaveRoom","downloadTxtFile","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","map","item","right"],"sources":["/Users/anupraj/Documents/Sync_Code/src/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport { initSocket } from \"./socket\";\nimport Client from \"./components/Client_avatar\";\nimport logo from \"./images/logo.webp\";\nimport Editor from \"./components/Editor\";\nimport \"./EditorPage.css\";\n\nfunction EditorPage() {\n  const editorRef = useRef(null);\n  const socketRef = useRef(null);\n  const navigate = useNavigate();\n  const codeRef = useRef(null);\n  const location = useLocation();\n  const [liveCode, setLiveCode] = useState(\"\");\n  const [access, setAccess] = useState(false);\n  const data = useParams();\n  const roomId = data.id;\n  const username = location.state.username;\n  const [clients, setclients] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const init = async () => {\n      socketRef.current = await initSocket();\n\n      socketRef.current.emit(\"join_room\", { roomId, username });\n\n      socketRef.current.on(\"joined_user\", ({ clients, username, socketId }) => {\n        if (username !== location.state.username) {\n          toast.success(`${username} joined the room.`);\n        }\n        setclients(clients);\n\n        socketRef.current.emit(\"sync_code\", {\n          code: codeRef.current,\n          socketId,\n        });\n      });\n\n      socketRef.current.on(\"disconnected\", ({ socketId, username }) => {\n        toast.success(`${username} left the room`);\n        setclients((prev) => {\n          return prev.filter((clients) => clients.socketId !== socketId);\n        });\n      });\n    };\n    init();\n    return () => {\n      socketRef.current.disconnect();\n      socketRef.current.off(\"disconnected\");\n      socketRef.current.off(\"joined_user\");\n    };\n  }, []);\n\n  async function copyRoomId() {\n    console.log(clients);\n    try {\n      await window.navigator.clipboard.writeText(roomId);\n      toast.success(\"Room id has been copied to clipboard!\");\n    } catch (err) {\n      toast.error(err);\n    }\n  }\n  async function lockAccess() {\n    setAccess(!access);\n    socketRef.current.emit(\"lock_access\", {\n      id,\n      access,\n    });\n  }\n\n  function leaveRoom() {\n    navigate(\"/\");\n    toast.success(\"You leaved the Room\");\n  }\n\n  const downloadTxtFile = async () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([liveCode], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    // const options = {\n    //   method: 'GET',\n    //   url: `https://judge0-ce.p.rapidapi.com/languages/${langCode}`,\n    //   headers: {\n    //     'X-RapidAPI-Key': `${process.env.REACT_APP_RAPID_API_KEY}`,\n    //     'X-RapidAPI-Host': 'judge0-ce.p.rapidapi.com'\n    //   }\n    // };\n\n    // const res = (await axios.request(options)).data;\n    element.download = \"main.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  return (\n    <div className=\"mainWrap\">\n      <div className=\"aside\">\n        <div className=\"asideInner\">\n          <div className=\"logo\">\n            <img className=\"logoImage\" src={logo} alt=\"\" />\n          </div>\n          <h3>Connected</h3>\n          <div className=\"clientList\">\n            {clients.map((item) => (\n              <Client key={item.socketId} username={item.username} />\n            ))}\n          </div>\n        </div>\n        <div className=\"buttons\">\n          <button className=\"btn copyBtn\" onClick={copyRoomId}>\n            Copy Room Id\n          </button>\n          <button className=\"btn leaveBtn\" onClick={leaveRoom}>\n            Leave\n          </button>\n        </div>\n      </div>\n\n      <div className=\"editorWrap\">\n        <Editor\n          socketRef={socketRef}\n          id={id}\n          setLiveCode={setLiveCode}\n          access={access}\n          editorRef={editorRef}\n        />\n      </div>\n      <button\n        className=\"btn doubtBtn\"\n        style={{ right: \"140px\" }}\n        onClick={downloadTxtFile}\n      >\n        Download Code\n      </button>\n    </div>\n  );\n}\n\nexport default EditorPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}